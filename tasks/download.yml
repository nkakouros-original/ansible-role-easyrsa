---

- name: Check download dir exists
  stat:
    path: "{{ easyrsa_download_dir }}"
  register: _result

- name: Create download dir  # noqa risky-file-permissions
  # Disabling file permissions check, because using `/tmp` vs `~` vs a user
  # folder will result in different expected permissions and I don't want to
  # mess them up by forcing them to e.g. 0o755
  file:
    path: "{{ easyrsa_download_dir }}"
    state: directory
    owner: "{{ easyrsa_download_user if not _result.stat.exists else omit }}"
    mode: "{{ '0o755' if not _result.stat.exists else omit }}"
  delegate_to: localhost
  # Not using `become` or `owner` (unless a new directory) for the same reason
  # as above. For example, if `/tmp` is the `path`, I don't want to change the
  # owner to the download user.

- name: Download whole pki
  block:
    - name: Create pki zip
      archive:
        path: "{{ easyrsa_pki_dir }}/*"
        # using a glob so that the parent folder is not included in the archive
        dest: "{{ easyrsa_pki_dir }}.zip"
        mode: 0o644
        format: zip
      register: _result

    - name: Download pki zip
      fetch:
        src: "{{ easyrsa_pki_dir }}.zip"
        dest: "{{ easyrsa_download_dir }}/"
        flat: true
      register: _this
      changed_when:
        - _this is changed
        - _result is changed
        # The previous task will check the contents of the new zip file against
        # the content of the pre-existing zip file and report as changed if
        # there were some change indeed. The actual zip files will have
        # different checksums due to the compression algorithm used that
        # produces different results every time, thus the zip file checksums are
        # not used in determining the change status of the task. The fetch tasks
        # here however uses the checksum of the downloaded file to check if it
        # is a different file from the one downloaded previously. Technically,
        # zip files produced by different ansible runs are indeed different, but
        # this is a compression algorithm quirk. Thus, I set this task to
        # changed only if the zip creation itself reports back as changed.

    - name: Extract zip file
      block:
        - name: Create extraction folder
          file:
            path: "{{ easyrsa_download_dir }}/{{ easyrsa_pki_dir | basename }}"
            state: directory
            owner: "{{ easyrsa_download_user }}"
            group: "{{ easyrsa_download_group }}"
            mode: 0o755

        - name: Extract pki zip
          unarchive:
            src: "{{ easyrsa_download_dir }}/{{ easyrsa_pki_dir | basename }}.zip"
            dest: "{{ easyrsa_download_dir }}/pki/"
            # Using a glob in `archive` and adding the `pki` part of the path here
            # manually in order to have  `unarchive` change the owner of just that
            # `pki` folder and not of `easyrsa_download_dir` as that would create
            # permission and idempotence issues for `fetch` above.
            owner: "{{ easyrsa_download_user }}"
            group: "{{ easyrsa_download_group }}"
      delegate_to: localhost
      become: "{{ easyrsa_download_user != ansible_user_id }}"
      when: easyrsa_download_pki_extract | bool
  when: easyrsa_download_pki | bool

- name: Download certificates
  fetch:
    src: "{{ easyrsa_pki_dir }}/issued/{{ _easyrsa__cert.name }}.crt"
    dest: "{{ easyrsa_download_dir }}/"
    flat: true
  loop: "{{ easyrsa_download }}"
  loop_control:
    loop_var: _easyrsa__cert

- name: Download keys
  fetch:
    src: "{{ easyrsa_pki_dir }}/private/{{ _easyrsa__cert.name }}.key"
    dest: "{{ easyrsa_download_dir }}/"
    flat: true
  loop: "{{ easyrsa_download }}"
  loop_control:
    loop_var: _easyrsa__cert
